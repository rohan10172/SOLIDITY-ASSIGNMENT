// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

contract MyUniqueToken {
    string public tokenName;
    string public symbol;
    uint256 public totalSupply;

    mapping(address => uint256) public balances;

    constructor(string memory _tokenName, string memory _symbol, uint256 _initialSupply) {
        tokenName = _tokenName;
        symbol = _symbol;
        totalSupply = _initialSupply;
        balances[msg.sender] = _initialSupply;
    }

    function mintTokens(address _recipient, uint256 _amount) public {
        require(_recipient != address(0), "Recipient cannot be zero address");
        totalSupply += _amount;
        balances[_recipient] += _amount;
    }

    function burnTokens(address _account, uint256 _amount) public {
        require(_account != address(0), "Account cannot be zero address");
        require(balances[_account] >= _amount, "Insufficient balance");
        totalSupply -= _amount;
        balances[_account] -= _amount;
    }
}
